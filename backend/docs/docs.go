// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-10-13 01:04:36.954707273 +0900 JST m=+0.297469521

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "Chillwork API List",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/v1",
    "paths": {
        "/auth/facebook": {
            "post": {
                "description": "初回登録なら「isSignIn: false」が返却されます。ここで取得できる「AccessToken」をそのままHeaderに「Authorization:{AccessToken}」でセットしてください。",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Facebook登録/ログイン",
                "parameters": [
                    {
                        "type": "string",
                        "description": "フロント側でfacebookログインした時に取得したユーザーID",
                        "name": "fbUserId",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "フロント側でfacebookログインした時に取得したアクセストークン",
                        "name": "fbAccessToken",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthFacebook"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/calls": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "友人の募集のみ返却されます。 「prev=true」の時は、渡された「latest」のIDより最新のものがあれば返却されます。基本ページングは「first」にIDが設定されていれば大丈夫です。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 募集フィード",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "最新のものを取得するかどうか ※基本設定しないで良いです",
                        "name": "prev",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "既に取得している募集の中で一番小さいID 初回読み込みは設定しないか、0を設定する",
                        "name": "first",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "既に取得している募集の中で一番大きいID 初回読み込みは設定しないか、0を設定する",
                        "name": "latest",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.GetFeedCalls"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 プロフィールを取得",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.GetUserProfile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新したいものだけ設定してください。 ※アカウント名変更はとりあえずできるようにしておいてある",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 プロフィールを更新",
                "parameters": [
                    {
                        "type": "string",
                        "description": "アカウント名（pathになるやつ）",
                        "name": "accpuntName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "名",
                        "name": "firstName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "性",
                        "name": "lastName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "自己紹介",
                        "name": "bio",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "メールアドレス",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "プロフィール画像",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.GetUserProfile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/me/calls": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "アクティブな募集のみ返却されます。 ※終了にした募集は含まれません、",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 自身が投稿した募集一覧",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.GetCalls"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 募集作成",
                "parameters": [
                    {
                        "type": "string",
                        "description": "タイトル",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "説明文",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "謝礼",
                        "name": "reward",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "skill_typesのidをカンマ区切り ex. 1,2,3 ※空文字の場合は、スキルを全削除します",
                        "name": "skillTypes",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.CreateCall"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/me/calls/{id}/finish": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 募集を終了する",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "募集ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.FinishCall"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/me/notifications": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "未確認のものを取得すると確認済みになります。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 通知一覧",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "デフォルトは0",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.GetNotifications"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/me/notifications/unconfirmed_count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "通知一覧取得でで未確認のものを取得すると確認済みになります。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 未確認通知数",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.NotificationCount"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/me/notifications/{id}/open": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 通知を既読にする",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "通知ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.OpenNotification"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/me/skill_types": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 自身のスキルタイプ（できること）を登録",
                "parameters": [
                    {
                        "type": "string",
                        "description": "skill_typesのidをカンマ区切り ex. 1,2,3 ※空文字の場合は、スキルを全削除します",
                        "name": "skillTypes",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.SaveOwnSkillTypes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/me/skills": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 自身のスキルを登録",
                "parameters": [
                    {
                        "type": "string",
                        "description": "skillsのidをカンマ区切り ex. 1,2,3 ※空文字の場合は、スキルを全削除します",
                        "name": "skills",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.SaveOwnSkills"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/restrict/skill_types": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 スキルタイプ（できること）マスターデータ",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.GetSkillTypes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/restrict/skills": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 スキルマスターデータ",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.GetSkills"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/users/{accountName}": {
            "get": {
                "description": "認証していると、自身のプロフィールかどうか判定されます",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証不要API】　ユーザープロフィール取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "アカウント名",
                        "name": "accountName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.GetUserProfile"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/users/{accountName}/calls": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証不要API】　ユーザーが投稿した募集一覧",
                "parameters": [
                    {
                        "type": "string",
                        "description": "アカウント名",
                        "name": "accountName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.GetCalls"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/users/{accountName}/calls/{id}": {
            "get": {
                "description": "認証していると、友人の投稿かどうか/興味ありしたかどうかが判別されます。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証不要API】　募集詳細",
                "parameters": [
                    {
                        "type": "string",
                        "description": "アカウント名",
                        "name": "accountName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "募集ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.CallDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        },
        "/users/{accountName}/calls/{id}/fav": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "【認証必須API】 募集に興味ありをする",
                "parameters": [
                    {
                        "type": "string",
                        "description": "アカウント名",
                        "name": "accountName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "募集ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.CreateCall"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.AuthError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/res.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "output.Auth": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "Bearer JhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJTb2NpYWxJZCI6IjFmOTkyNTUxNTQ3NTczMzcyIiwiU29jaWFsTmFtZSI6ImZhY2Vib29rIn0.W8Md1vUZvwPoo0jykSvbHL66pzxmB5MtsrtnKusk1Bg"
                },
                "isSignIn": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "output.Call": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "clean_archのロゴ作成してください！"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "ogpUrl": {
                    "type": "string",
                    "example": "https://storage.googleapis.com/dev_productcast/call_fb_ogp/zaiThVEQrHLbIvwOwCmjGWCr"
                },
                "postUser": {
                    "type": "object",
                    "$ref": "#/definitions/output.UserProfile"
                },
                "reward": {
                    "type": "string",
                    "example": "相談の上金額を決めましょう"
                },
                "title": {
                    "type": "string",
                    "example": "デザイナー探してます"
                }
            }
        },
        "output.CallDetail": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "clean_archのロゴ作成してください！"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "isFavorite": {
                    "type": "boolean",
                    "example": false
                },
                "isFriend": {
                    "type": "boolean",
                    "example": false
                },
                "ogpUrl": {
                    "type": "string",
                    "example": "https://storage.googleapis.com/dev_productcast/call_fb_ogp/zaiThVEQrHLbIvwOwCmjGWCr"
                },
                "postUser": {
                    "type": "object",
                    "$ref": "#/definitions/output.UserProfile"
                },
                "reward": {
                    "type": "string",
                    "example": "相談の上金額を決めましょう"
                },
                "title": {
                    "type": "string",
                    "example": "デザイナー探してます"
                }
            }
        },
        "output.CreateCall": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "output.FinishCall": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "output.Notification": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "isConfirmed": {
                    "type": "boolean"
                },
                "isOpened": {
                    "type": "boolean"
                },
                "option": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "output.Skill": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "スキルA"
                }
            }
        },
        "output.SkillType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Web開発"
                }
            }
        },
        "output.SkillWithCategory": {
            "type": "object",
            "properties": {
                "designs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/output.Skill"
                    }
                },
                "devs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/output.Skill"
                    }
                }
            }
        },
        "output.UserProfile": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string",
                    "example": "clean_arch.clean_arch"
                },
                "bio": {
                    "type": "string",
                    "example": "clean_archにピボットしました"
                },
                "email": {
                    "type": "string",
                    "example": "info@arasuji.co.jp"
                },
                "firstName": {
                    "type": "string",
                    "example": "clean_arch"
                },
                "lastName": {
                    "type": "string",
                    "example": "arasuji"
                },
                "pictureUrl": {
                    "type": "string",
                    "example": "https://scontent-nrt1-1.xx.fbcdn.net/v/t1.0-1/c0.0.64.64/p64x64/306664_100488913446311_1008060367_n.jpg?_nc_cat=103\u0026oh=83a055af03fc22872962d311d6295170\u0026oe=5C19F8E8"
                },
                "skillTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/output.SkillType"
                    }
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/output.Skill"
                    }
                }
            }
        },
        "res.APIError": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.errorMessage"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "res.AuthError": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.authErrorMessage"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "res.AuthFacebook": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/output.Auth"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.CallDetail": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.callDetail"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.CreateCall": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.createCall"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.FinishCall": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.finishCall"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.GetCalls": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.calls"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.GetFeedCalls": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.feedCalls"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.GetNotifications": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.notifications"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.GetSkillTypes": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.skillTypes"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.GetSkills": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.skills"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.GetUserProfile": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.profile"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.NotificationCount": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/res.count"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.OpenNotification": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.SaveOwnSkillTypes": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.SaveOwnSkills": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "object"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "res.authErrorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        },
        "res.callDetail": {
            "type": "object",
            "properties": {
                "call": {
                    "type": "object",
                    "$ref": "#/definitions/output.CallDetail"
                }
            }
        },
        "res.calls": {
            "type": "object",
            "properties": {
                "calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/output.Call"
                    }
                }
            }
        },
        "res.count": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "res.createCall": {
            "type": "object",
            "properties": {
                "call": {
                    "type": "object",
                    "$ref": "#/definitions/output.CreateCall"
                }
            }
        },
        "res.errorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        },
        "res.feedCalls": {
            "type": "object",
            "properties": {
                "calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/output.Call"
                    }
                },
                "hasLatest": {
                    "type": "boolean",
                    "example": false
                },
                "hasNext": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "res.finishCall": {
            "type": "object",
            "properties": {
                "call": {
                    "type": "object",
                    "$ref": "#/definitions/output.FinishCall"
                }
            }
        },
        "res.notifications": {
            "type": "object",
            "properties": {
                "hasNext": {
                    "type": "boolean",
                    "example": false
                },
                "nextPage": {
                    "type": "integer"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/output.Notification"
                    }
                }
            }
        },
        "res.profile": {
            "type": "object",
            "properties": {
                "profile": {
                    "type": "object",
                    "$ref": "#/definitions/output.UserProfile"
                }
            }
        },
        "res.skillTypes": {
            "type": "object",
            "properties": {
                "skillTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/output.SkillType"
                    }
                }
            }
        },
        "res.skills": {
            "type": "object",
            "properties": {
                "skills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/output.SkillWithCategory"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "Headers"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
